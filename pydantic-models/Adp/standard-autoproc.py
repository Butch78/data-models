# generated by datamodel-codegen:
#   filename:  standard
#   timestamp: 2023-11-19T08:07:19+00:00

from __future__ import annotations

from typing import Any, List, Union

from pydantic import BaseModel, Field


class AdpExecutionStack(BaseModel):
    field_1: str = Field(..., alias='1')
    field_2: str = Field(..., alias='2')
    field_3: str = Field(..., alias='3')
    field_4: str = Field(..., alias='4')


class FastXds1(BaseModel):
    pending: str
    running: str
    completed: str


class FastXds2(BaseModel):
    pending: str
    running: str
    completed: str


class FastXds3(BaseModel):
    pending: str
    running: str
    completed: str


class Autoproc(BaseModel):
    pending: str
    running: str
    completed: str


class StatusHistory(BaseModel):
    fast_xds_1: FastXds1
    fast_xds_2: FastXds2
    fast_xds_3: FastXds3
    autoproc: Autoproc


class FQDN(BaseModel):
    fast_xds_1: str
    fast_xds_2: str
    fast_xds_3: str
    autoproc: str


class AngularRange(BaseModel):
    fast_xds_1: float
    fast_xds_2: float
    fast_xds_3: float
    autoproc: float


class AdpStatus(BaseModel):
    fast_xds_1: str
    fast_xds_2: str
    fast_xds_3: str
    autoproc: str


class AdpInfo(BaseModel):
    fast_xds_1: str
    fast_xds_2: str
    fast_xds_3: str
    autoproc: str


class FastXds2Item(BaseModel):
    order: str
    star: str
    lattice_character: str
    bravais_lattice: str
    quality_of_fit: float
    cell_a: float
    cell_b: float
    cell_c: float
    alpha: float
    beta: float
    gamma: float


class FastXds3Item(BaseModel):
    order: str
    resolution_limit: Union[float, str]
    observed_reflections: int
    unique_reflections: int
    possible_reflections: int
    completeness: float
    r_factor_observed: float
    r_factor_expected: float
    Isigma: float
    rmeas: float
    cc_half: float
    anomalous_correlation: int
    sigAno: float


class XdsInputParams(BaseModel):
    jobs: str
    numberOfJobs: str
    numberOfProcessors: str
    nodes: str
    beamXpix_XDS: float
    beamYpix_XDS: float
    detectorDistance: float
    oscillationAngle: float
    wavelength: float
    dataFrames: str
    firstIndex: int
    numFrames: int
    lastIndex: str
    excludeReference: str
    referenceData: str
    excludeSG: str
    sgNumber: str
    excludeUnitCell: str
    cellA: str
    cellB: str
    cellC: str
    cellAlpha: str
    cellBeta: str
    cellGamma: str
    refineIntegrate: str
    friedel: str
    highResolution: float
    trustedHigh: str
    excludePixelsInSpot: str
    pixelsInSpot: str
    nx: int
    ny: int
    overload: int


class FastXds3Params(BaseModel):
    spaceGroupNumber: str
    spaceGroupLabel: str
    a: float
    b: float
    c: float
    alpha: float
    beta: float
    gamma: float
    mosaicity: float
    isa: float
    wilsonBfactor: float
    xds_input_params: XdsInputParams


class AutoprocItem(BaseModel):
    order: str
    low_resolution_limit: float
    resolution_limit: float
    r_factor_observed: float
    rmeas_within: float
    rmeas: float
    rpim_within: float
    rpim: float
    observed_reflections: int
    unique_reflections: int
    Isigma: float
    completeness: float
    multiplicity: float
    cc_half: float
    anomalous_completeness: float
    anomalous_multiplicity: float
    anomalous_correlation: float
    sigAno: float


class SpacegroupItem(BaseModel):
    order: Union[int, str]
    sg: str
    sg_nr: int
    LGconfidence: Union[float, str]
    SGconfidence: Union[float, str]


class TableStaraniso1Item(BaseModel):
    order: str
    resolution: str
    matrix_1: str
    matrix_2: str
    matrix_3: str
    vectors: str


class TableStaraniso2Item(BaseModel):
    order: str
    low_resolution_limit: float
    resolution_limit: float
    r_factor_observed: float
    rmeas_within: float
    rmeas: float
    rpim_within: float
    rpim: float
    observed_reflections: int
    unique_reflections: int
    Isigma: float
    completeness: float
    completeness_ellipsoidal: float
    multiplicity: float
    cc_half: float
    anomalous_completeness: float
    anomalous_completeness_ellipsoidal: float
    anomalous_multiplicity: float
    anomalous_correlation: float
    sigAno: float


class AutoprocParams(BaseModel):
    command: str
    spaceGroupNumber: int
    spaceGroupLabel: str
    a: float
    b: float
    c: float
    alpha: float
    beta: float
    gamma: float
    mosaicity: float
    isa: float
    wilsonBfactor: float
    spacegroup_pointless: str
    spacegroup: List[SpacegroupItem]
    table_staraniso_1: List[TableStaraniso1Item]
    table_staraniso_2: List[TableStaraniso2Item]


class Result(BaseModel):
    fast_xds_2: List[FastXds2Item]
    fast_xds_3: List[FastXds3Item]
    fast_xds_3_params: FastXds3Params
    autoproc: List[AutoprocItem]
    autoproc_params: AutoprocParams
    fast_xds_1: List
    fast_xds_1_params: List
    fast_xds_2_params: List


class Metadatum(BaseModel):
    name: str
    value: Union[List[Any], float, str]


class Model(BaseModel):
    field_id: str = Field(..., alias='_id')
    userAccount: str
    user: str
    uid: int
    gid: int
    createdOn: str
    lastUpdated: str
    beamline: str
    trackingId: str
    method: str
    beamTransmission: float
    beam_position_x: float
    beam_position_y: float
    detectorDistance: float
    exposureTime: float
    folder: str
    root_folder: str
    numFramesTotal: int
    datasetNo: int
    numberOfExpectedDatasets: int
    oscillationAngle: float
    prefix: str
    runNumber: int
    wavelength: float
    adpExecutionStack: AdpExecutionStack
    statusHistory: StatusHistory
    FQDN: FQDN
    angularRange: AngularRange
    adpStatus: AdpStatus
    adpInfo: AdpInfo
    result: Result
    detector: str
    roi: str
    mergeFolder: str
    mergeId: str
    seen: bool
    datasets_id: None
    metadata: List[Metadatum]
